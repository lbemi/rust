[package]
name = "ex"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]

#opt-level 设置控制 Rust 会对代码进行何种程度的优化。
#这个配置的值从 0 到 3。越高的优化级别需要更多的时间编译，
#所以如果你在进行开发并经常编译，可能会希望在牺牲一些代码性能的情况下编译得快一些。
#这就是为什么 dev 的 opt-level 默认为 0。当你准备发布时，花费更多时间在编译上则更好。
#只需要在发布模式编译一次，而编译出来的程序则会运行很多次，
#所以发布模式用更长的编译时间换取运行更快的代码。这正是为什么 release 配置的 opt-level 默认为 3。

#我们可以选择通过在 Cargo.toml 增加不同的值来覆盖任何默认设置。
#比如，如果我们想要在开发配置中使用级别 1 的优化，则可以在 Cargo.toml 中增加这两行：
[profile.dev]
opt-level = 0

[profile.release]
opt-level = 3